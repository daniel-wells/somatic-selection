# create on the command line by:
# dot -Tpng data_flow_diagram.gv -o data_flow_diagram.png
digraph dfd2{
	graph [ dpi = 150 ]; 
        node[shape=record]
        subgraph level0{
        fasta [label="Fasta | Ensembl", style=filled, fillcolor=yellow];
        ICGCagg [label="VFC | ICGC aggregated", style=filled, fillcolor=yellow];
        ICGCindiv [label="TSV | ICGC Project SSM", style=filled, fillcolor=yellow];
                        {rank=same; fasta,ICGCagg,ICGCindiv}

        expected [label="expected_variants_per_transcript.tsv" shape=box, style=filled, fillcolor=lightblue];
        observed [label="observed_variants_by_transcript.tsv" shape=box, style=filled, fillcolor=lightblue];
        dndsTranscript [label="dNdS_by_transcript.tsv" shape=box, style=filled, fillcolor=lightblue];
        dndsgene [label="dNdS_by_gene.tsv" shape=box, style=filled, fillcolor=green];
        graphs [label="Graphs.pdf" shape=box, style=filled, fillcolor=green];
        enti14 [label="simple_somatic_mutation.aggregated.filtered.vcf" shape=box, style=filled, fillcolor=lightblue];
        enti15 [label="observed_variants_by_transcript.filtered.tsv" shape=box, style=filled, fillcolor=lightblue];
        singleBaseCodingSubs [label="single.base.coding.substitutions.rds" shape=box, style=filled, fillcolor=pink];
        trimerCounts [label="coding.trimer.counts.rds" shape=box, style=filled, fillcolor=pink];
        motifProbs [label="motif.probabilities.rds" shape=box, style=filled, fillcolor=lightblue];
        aggMut [label="simple.somatic.mutations.aggregated.rds" shape=box, style=filled, fillcolor=pink];
		codome [label="codome.rds" shape=box, style=filled, fillcolor=pink];
		randomAggregated [label="random.aggregated.tsv" shape=box, style=filled, fillcolor=lightblue];
		pvalues [label="p.values.tsv" shape=box, style=filled, fillcolor=lightblue];
		randomisedRaw [label="randomised raw files (multiple)" shape=box, style=filled, fillcolor=lightblue];

        calcExpected [label="calculate_expected_variants.R}" shape=Mrecord];
        calcdnds [label="calculate_dNdS.R}" shape=Mrecord];
        analysednds [label="analyse_dNdS.R}" shape=Mrecord];
        flatten [label="flatten_vcf.py}" shape=Mrecord];
        MakeDownload [label="{Makefile|Download Raw Data}" shape=Mrecord];
        proc9 [label="{dNdS.sh|Filter}" shape=Mrecord];
        proc10 [label="{dNdS.sh|Filter}" shape=Mrecord];
		randomise [label="{randomise_genome.R}" shape=Mrecord];
		trimerise [label="{trimerise_codome.R}" shape=Mrecord];
		load [label="{load_mutations.R}" shape=Mrecord];
		proc10 [label="{dNdS.sh|Filter}" shape=Mrecord];
        calcProfile [label="{calculate_mutation_profiles.R}" shape=Mrecord];
		mergeRandom [label="{Makefile|Aggregate files}" shape=Mrecord];
		calculateP [label="{calculate_pvalues.R}" shape=Mrecord];
        }

       subgraph cluster_level1{
                	label ="Annotations" rank="max";
        		biomart [label="Biomart Export" shape=box, style=filled, fillcolor=yellow];
	        	vogelstein [label="Vogelstein Cancer List" shape=box, style=filled, fillcolor=yellow];
	        	rna [label="TGCA RNAseq" shape=box, style=filled, fillcolor=yellow];

			rnaTotal [label="tgca_RNAseq.total.tsv" shape=box, style=filled, fillcolor=lightblue];
			rnaGene [label="RNAseq.by.gene.tsv" shape=box, style=filled, fillcolor=lightblue];

	        	expression [label="tgca_expression.R}" shape=Mrecord];
	        	expressionAnalysis [label="expression_analysis.R}" shape=Mrecord];

                       # store1 [label="<f0>    |<f1> Data store one"];
                       # store2 [label="<f0>   |<f1> Data store two"];
                       # {rank=same; store1, store2}

        }

	subgraph cluster_level2{
                        label ="Key" fontsize="25" rank="min";
        raw [label="Raw Data" shape=box, style=filled, fillcolor=yellow];
		data [label="Intermediate Data" shape=box, style=filled, fillcolor=lightblue];
		cachedata [label="Cached Data" shape=box, style=filled, fillcolor=pink];
	    results [label="Result" shape=box, style=filled, fillcolor=green];
	    script [label="Script" shape=Mrecord];
        }

	# Download Data
	MakeDownload -> {fasta, ICGCagg, ICGCindiv, biomart, vogelstein, rna}
	
	ICGCindiv -> load -> {singleBaseCodingSubs,aggMut}
	{singleBaseCodingSubs,trimerCounts} -> calcProfile -> motifProbs
	{fasta,motifProbs} -> calcExpected -> expected -> calcdnds 	-> dndsTranscript -> analysednds -> {graphs dndsgene}
	
	# Ensembl Fasta
	fasta -> trimerise -> {codome,trimerCounts}
	
	# Create random genomes and calculate Pvalues
	{codome,motifProbs} -> randomise -> randomisedRaw -> mergeRandom -> randomAggregated -> calculateP -> pvalues -> analysednds
		dndsTranscript -> calculateP

	# ICGC VCF
	ICGCagg -> proc9 -> enti14 -> flatten -> observed -> proc10-> enti15 -> calcdnds


	# Add annotations
	{biomart,vogelstein} -> analysednds

	# RNA Expression
	rna -> expression -> rnaTotal -> expressionAnalysis -> rnaGene -> analysednds

	# Key
#	raw -> script -> data -> results [style=invis]
	 enti15 -> script  [style=invis, minlen=4]

}
